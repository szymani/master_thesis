openapi: 3.0.0
info:
  title: Masters_Swagger
  contact: {}
  version: "1.0"
servers:
  - url: http:/127.0.0.1:5000
    variables: {}
paths:
  /signup:
    post:
      tags:
        - User
      summary: Signup
      operationId: Signup
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequest"
            example:
              login: filip2
              password: password
              email: filip_email2
              profile_photo:
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false
  /login:
    post:
      tags:
        - User
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
            example:
              login: filip321
              password: pass
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false
  /user/{id}:
    get:
      tags:
        - User
      summary: GetUser
      operationId: GetUser
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 0
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

    put:
      tags:
        - User
      summary: UpdateUser
      operationId: UpdateUser
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 1
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
            example:
              login: filipk
              password: password
              email: email
              profile_photo:
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

    delete:
      tags:
        - User
      summary: DeleteUser
      operationId: DeleteUser
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 1
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteUserRequest"
            example:
              login: filip
              password: haslo
              email: fifi
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/self:
    get:
      tags:
        - User
      summary: GetSelf
      operationId: GetSelf
      parameters: []
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user:
    get:
      tags:
        - User
      summary: GetByLogin
      operationId: GetByLogin
      parameters:
        - name: login
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: filip
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/:
    put:
      tags:
        - User
      summary: UpdateSelf
      operationId: UpdateSelf
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSelfRequest"
            example:
              login: filip7
              password: password2
              email: filip_email32
              profile_photo:
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

    delete:
      tags:
        - User
      summary: DeleteSelf
      operationId: DeleteSelf
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSelfRequest"
            example:
              login: filip
              password: haslo
              email: fifi
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/{id}/follow:
    put:
      tags:
        - User
      summary: FollowUser
      operationId: FollowUser
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 1
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FollowUserRequest"
            example:
              login: filipk
              password: password
              email: email
              profile_photo:
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/{id}/unfollow:
    put:
      tags:
        - User
      summary: UnFollowUser
      operationId: UnFollowUser
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 6
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnFollowUserRequest"
            example:
              login: filipk
              password: password
              email: email
              profile_photo:
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/{id}/followed:
    get:
      tags:
        - User
      summary: GetFollowed
      operationId: GetFollowed
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 2
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/{id}/followers:
    get:
      tags:
        - User
      summary: GetFollowers
      operationId: GetFollowers
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 6
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/followed:
    get:
      tags:
        - User
      summary: GetFollowedSelf
      operationId: GetFollowedSelf
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/followers:
    get:
      tags:
        - User
      summary: GetFollowersSelf
      operationId: GetFollowersSelf
      parameters:
        - name: limit
          in: query
          description: ""
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /style/:
    post:
      tags:
        - Style
      summary: AddStyle
      operationId: AddStyle
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddStyleRequest"
            example:
              isprivate: false
              style_image:
              description: description_test_secret
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /style/favourite/{id}:
    put:
      tags:
        - Style
      summary: AddToFav
      operationId: AddToFav
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 12
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /styles:
    get:
      tags:
        - Style
      summary: GetYourStyles
      operationId: GetYourStyles
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /styles/all:
    get:
      tags:
        - Style
      summary: GetAllStyles
      operationId: GetAllStyles
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /styles/favourite:
    get:
      tags:
        - Style
      summary: GetFavStyles
      operationId: GetFavStyles
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /styles/followed:
    get:
      tags:
        - Style
      summary: GetFollowedStyles
      operationId: GetFollowedStyles
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /{id}:
    put:
      tags:
        - Style
      summary: UpdateStyle
      operationId: UpdateStyle
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 23
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStyleRequest"
            example:
              isprivate: true
              style_image:
              description: description_test_update
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false
      servers:
        - url: http:/127.0.0.1:5000/style
          variables: {}
    delete:
      tags:
        - Style
      summary: DeleteStyle
      operationId: DeleteStyle
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false
      servers:
        - url: http:/127.0.0.1:5000/style
          variables: {}
  /post/:
    post:
      tags:
        - Post
      summary: Add
      operationId: Add
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddRequest"
            example:
              content_image:
              description: description_test
              style_id: 0
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /post/{id}:
    get:
      tags:
        - Post
      summary: Get
      operationId: Get
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 2
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

    put:
      tags:
        - Post
      summary: Update
      operationId: Update
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 6
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRequest"
            example:
              content_image:
              description: description_test_update
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

    delete:
      tags:
        - Post
      summary: Delete
      operationId: Delete
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 14
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRequest"
            example:
              login: filip
              password: haslo
              email: fifi
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/{id}/posts:
    get:
      tags:
        - Post
      summary: GetAll
      operationId: GetAll
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 7
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /user/followed/posts:
    get:
      tags:
        - Post
      summary: GetFollowedPosts
      operationId: GetFollowedPosts
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /post/{id}/like:
    put:
      tags:
        - Post
      summary: LikePost
      operationId: LikePost
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 8
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LikePostRequest"
            example:
              content_image:
              description: description_test_update
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /post/{id}/unlike:
    put:
      tags:
        - Post
      summary: UnLikePost
      operationId: UnLikePost
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 8
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnLikePostRequest"
            example:
              content_image:
              description: description_test_update
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /post/{id}/likes:
    get:
      tags:
        - Post
      summary: GetLikesList
      operationId: GetLikesList
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 8
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /post/{id}/comment:
    post:
      tags:
        - Comment
      summary: Add
      operationId: PostAdd
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 5
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddRequest1"
            example:
              description: description_test
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /post/{id}/comments:
    get:
      tags:
        - Comment
      summary: GetAll
      operationId: GetAll1
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 5
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /comment/{id}:
    put:
      tags:
        - Comment
      summary: Update
      operationId: PutUpdate
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 4
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRequest1"
            example:
              description: description_update222
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

    delete:
      tags:
        - Comment
      summary: Delete
      operationId: Delete1
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 4
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRequest"
            example:
              login: filip
              password: haslo
              email: fifi
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /chats/{id}/send:
    post:
      tags:
        - Messages
      summary: AddMessage
      operationId: AddMessage
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 10
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddMessageRequest"
            example:
              content_image:
              message_text: message_text
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /chats/new:
    post:
      tags:
        - Messages
      summary: AddChat
      operationId: AddChat
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddChatRequest"
            example:
              participants:
                - 1
                - 2
              chat_name: new name
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /chats/:
    get:
      tags:
        - Messages
      summary: GetChatsList
      operationId: GetChatsList
      parameters: []
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /chats/{id}:
    get:
      tags:
        - Messages
      summary: GetChatMessages
      operationId: GetChatMessages
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 3
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /services/add:
    post:
      tags:
        - Services
      summary: Add Service
      operationId: AddService
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddServiceRequest"
            example:
              description: New chinese restaurant on FCT
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /services/{id}/reviewstar:
    put:
      tags:
        - Services
      summary: Add review_star
      operationId: Addreview_star
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 1
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Addreview_starRequest"
            example:
              classification: 4
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /services/{id}/review:
    post:
      tags:
        - Services
      summary: Add_review_text
      operationId: Add_review_text
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 1
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Add_review_text_Request"
            example:
              review_text: Cats are also good.
        required: true
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /services/{id}:
    get:
      tags:
        - Services
      summary: Get an service
      operationId: Getanservice
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /services:
    get:
      tags:
        - Services
      summary: GetServices
      operationId: GetServices
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

  /services/full:
    get:
      tags:
        - Services
      summary: GetFullServices
      operationId: GetFullServices
      parameters:
        - name: limit
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: "OK"
          headers: {}
      deprecated: false

components:
  schemas:
    SignupRequest:
      title: SignupRequest
      required:
        - login
        - password
        - email
        - profile_photo
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        email:
          type: string
        profile_photo:
          type: string
          nullable: true
      example:
        login: filip2
        password: password
        email: filip_email2
        profile_photo:
    LoginRequest:
      title: LoginRequest
      required:
        - login
        - password
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      example:
        login: filip321
        password: pass
    UpdateSelfRequest:
      title: UpdateSelfRequest
      required:
        - login
        - password
        - email
        - profile_photo
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        email:
          type: string
        profile_photo:
          type: string
          nullable: true
      example:
        login: filip7
        password: password2
        email: filip_email32
        profile_photo:
    UpdateUserRequest:
      title: UpdateUserRequest
      required:
        - login
        - password
        - email
        - profile_photo
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        email:
          type: string
        profile_photo:
          type: string
          nullable: true
      example:
        login: filipk
        password: password
        email: email
        profile_photo:
    DeleteUserRequest:
      title: DeleteUserRequest
      required:
        - login
        - password
        - email
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        email:
          type: string
      example:
        login: filip
        password: haslo
        email: fifi
    DeleteSelfRequest:
      title: DeleteSelfRequest
      required:
        - login
        - password
        - email
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        email:
          type: string
      example:
        login: filip
        password: haslo
        email: fifi
    FollowUserRequest:
      title: FollowUserRequest
      required:
        - login
        - password
        - email
        - profile_photo
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        email:
          type: string
        profile_photo:
          type: string
          nullable: true
      example:
        login: filipk
        password: password
        email: email
        profile_photo:
    UnFollowUserRequest:
      title: UnFollowUserRequest
      required:
        - login
        - password
        - email
        - profile_photo
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        email:
          type: string
        profile_photo:
          type: string
          nullable: true
      example:
        login: filipk
        password: password
        email: email
        profile_photo:
    AddStyleRequest:
      title: AddStyleRequest
      required:
        - isprivate
        - style_image
        - description
      type: object
      properties:
        isprivate:
          type: boolean
        style_image:
          type: string
          nullable: true
        description:
          type: string
      example:
        isprivate: false
        style_image:
        description: description_test_secret
    UpdateStyleRequest:
      title: UpdateStyleRequest
      required:
        - isprivate
        - style_image
        - description
      type: object
      properties:
        isprivate:
          type: boolean
        style_image:
          type: string
          nullable: true
        description:
          type: string
      example:
        isprivate: true
        style_image:
        description: description_test_update
    AddRequest:
      title: AddRequest
      required:
        - content_image
        - description
        - style_id
      type: object
      properties:
        content_image:
          type: string
          nullable: true
        description:
          type: string
        style_id:
          type: integer
          format: int32
      example:
        content_image:
        description: description_test
        style_id: 0
    UpdateRequest:
      title: UpdateRequest
      required:
        - content_image
        - description
      type: object
      properties:
        content_image:
          type: string
          nullable: true
        description:
          type: string
      example:
        content_image:
        description: description_test_update
    DeleteRequest:
      title: DeleteRequest
      required:
        - login
        - password
        - email
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        email:
          type: string
      example:
        login: filip
        password: haslo
        email: fifi
    LikePostRequest:
      title: LikePostRequest
      required:
        - content_image
        - description
      type: object
      properties:
        content_image:
          type: string
          nullable: true
        description:
          type: string
      example:
        content_image:
        description: description_test_update
    UnLikePostRequest:
      title: UnLikePostRequest
      required:
        - content_image
        - description
      type: object
      properties:
        content_image:
          type: string
          nullable: true
        description:
          type: string
      example:
        content_image:
        description: description_test_update
    AddRequest1:
      title: AddRequest1
      required:
        - description
      type: object
      properties:
        description:
          type: string
      example:
        description: description_test
    UpdateRequest1:
      title: UpdateRequest1
      required:
        - description
      type: object
      properties:
        description:
          type: string
      example:
        description: description_update222
    AddMessageRequest:
      title: AddMessageRequest
      required:
        - content_image
        - message_text
      type: object
      properties:
        content_image:
          type: string
          nullable: true
        message_text:
          type: string
      example:
        content_image:
        message_text: message_text
    AddChatRequest:
      title: AddChatRequest
      required:
        - participants
        - chat_name
      type: object
      properties:
        participants:
          type: array
          items:
            type: integer
            format: int32
          description: ""
        chat_name:
          type: string
      example:
        participants:
          - 1
          - 2
        chat_name: new name
    AddServiceRequest:
      title: AddServiceRequest
      required:
        - description
      type: object
      properties:
        description:
          type: string
      example:
        description: New chinese restaurant on FCT
    Addreview_starRequest:
      title: Addreview_starRequest
      required:
        - classification
      type: object
      properties:
        classification:
          type: integer
          format: int32
      example:
        classification: 4
    Add_review_text_Request:
      title: Add_review_text_Request
      required:
        - review_text
      type: object
      properties:
        review_text:
          type: string
      example:
        review_text: Cats are also good.
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: User
  - name: Style
  - name: Post
  - name: Comment
  - name: Messages
  - name: Services
